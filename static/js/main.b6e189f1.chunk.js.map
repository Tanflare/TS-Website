{"version":3,"sources":["App.js","components/counter2.jsx","components/About.jsx","components/Work.jsx","components/Contact.jsx","components/Nav.jsx","serviceWorker.js","index.js"],"names":["App","Component","react_default","a","createElement","className","id","class","About","state","count","onClick","Text","document","getElementById","innerHTML","console","log","behance","window","open","focus","github","Work","linkedin","Contact","src","height","about","ReactDOM","render","src_components_About","home","src_App_0","contact","src_components_Contact","work","src_components_Work","Nav","href","Boolean","location","hostname","match","src_components_Nav","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6e189f1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport New from './components/counter2';\nimport ReactDOM from 'react-dom';\n\nimport './App.css';\n\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      \n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div id=\"container\" >\n           <span class=\"dot\"></span>\n           <p id =\"Scroll\" className = \"Tanush\" >Tanush Samson</p>\n           {/* <p className = \"Tanush\" >Tanush Samson<span id= \"cursor\">|</span></p> */}\n          </div>\n        </header>\n      </div>\n      \n      \n    );\n  }\n}\n\n\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport App from '../App';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nclass New extends Component {\r\n    state = {\r\n        count: this.props.value,\r\n        // imageUrl: 'https://picsum.photos/200'\r\n        tags: ['tag1', 'tag2', 'tag3']\r\n    };\r\n\r\n    styles = {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\"\r\n    };\r\n\r\n    renderTags()\r\n    {\r\n        if (this.state.tags.length === 0) return <p>No</p>;\r\n        return <ul>\r\n        {this.state.tags.map(tag=><li key={tag}>{tag}</li>)}\r\n        </ul>;\r\n    }\r\n\r\n    handleIncrement = product =>\r\n    {\r\n        console.log(\"Incremented\", product,  this)\r\n        this.setState({ count: this.state.count + 1})\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n        \r\n        <React.Fragment>\r\n        {this.props.children}\r\n        {/* <img src = {this.state.imageUrl}></img> */}\r\n        <span style = {this.styles} className = {this.getBadgeClasses()}>{this.formatCount()}</span>\r\n        <button onClick={() => this.handleIncrement()} className= \"btn btn-secondary btn-sm\">Increment</button>\r\n        {this.renderTags()}\r\n        </React.Fragment>\r\n        );\r\n    }\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += this.state.count === 0 ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount() {\r\n        const { count } = this.state;\r\n        return count === 0 ? \"Zero\" : count;\r\n    }\r\n\r\n    Test()\r\n    {\r\n        ReactDOM.render(<App />, document.getElementById('root'));\r\n    }\r\n\r\n}\r\n\r\nexport default New;","import React, { Component } from 'react';\r\nimport ParallaxComponent from 'react-parallax-component';\r\nimport './About.css';\r\n\r\nclass About extends Component {\r\n    state = { count:0 };\r\n    \r\n    \r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"about\">\r\n            <header >\r\n                \r\n                \r\n                    <div className=\"axis\">\r\n                    <span id=\"outer\" className =\"Header\">\r\n                    <p id =\"bio\">Hi, my name is Tanush Samson.</p>\r\n                    \r\n                    </span>\r\n                    <br/>\r\n                    <span class=\"dot2\"></span>\r\n                    <span class=\"dot3\"></span>\r\n                    <span class=\"dot4\"></span>\r\n                    <span class=\"dot5\"></span>\r\n                    <span class=\"dot6\"></span>\r\n                    <button id=\"button\" class=\"arrow\" onClick={Text}>ðŸ¡“</button>\r\n                    {/* ðŸ¡“ â–³*/}\r\n                    </div>\r\n                    \r\n                \r\n                \r\n            </header>\r\n             </div>\r\n         );\r\n    }\r\n}\r\nvar count = 0;\r\n\r\nfunction Text()\r\n    {   \r\n        \r\n        \r\n        if(count==0)\r\n        {\r\n        document.getElementById(\"bio\").innerHTML= \"I'm a senior at Kalamazoo College interested in pursuing a career in Computer and Data Science. The impact of technology, mainly software, on all our lives cannot be overstated. And I look forward to contributing to that in a meaningful way.\";\r\n        //document.getElementById(\"bio\").style.fontSize = \"2vw\";\r\n        count++;\r\n        return;\r\n        }\r\n\r\n        if(count==1)\r\n        {\r\n        document.getElementById(\"bio\").innerHTML= \"I am very design-oriented, having experience in both the ideation and the implementation process for a number of projects. I am interested in the applications of emerging technologies such as neuromorphic computing and the Blockchain, and established technologies such as ML.\";\r\n        //document.getElementById(\"bio\").style.fontSize = \"2vw\";\r\n        count++;\r\n        return;\r\n        }\r\n        \r\n        if(count==2)\r\n        {\r\n        document.getElementById(\"bio\").innerHTML= \"In my spare time, I enjoy playing soccer, binge-watching Breaking Bad for the 20th time and graphic designing.\";\r\n        //document.getElementById(\"bio\").style.fontSize = \"2vw\";\r\n        count++;\r\n        return;\r\n        }\r\n        if (count > 2)\r\n        {\r\n                document.getElementById(\"bio\").innerHTML= \"Hi, my name is Tanush Samson.\";\r\n                //document.getElementById(\"bio\").style.fontSize = \"2vw\";\r\n                count = 0;\r\n                return;\r\n        }\r\n        \r\n        console.log(count);\r\n\r\n    }\r\n \r\nexport default About;","import React, { Component } from 'react';\r\n\r\nimport './Work.css';\r\n\r\nclass Work extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"App\">\r\n                <header className=\"container\">\r\n                    <h1 className =\"link\" onClick={behance}>Behance</h1>\r\n                    <br></br>\r\n                    <h1 className=\"link\" onClick={github}>GitHub</h1>\r\n                </header>\r\n            </div> \r\n            \r\n        );\r\n    }\r\n}\r\n \r\nfunction behance(){\r\n    var win = window.open(\"https://www.behance.net/Tanflare\", '_blank');\r\n      win.focus();\r\n    }\r\n\r\nfunction github(){\r\n    var win = window.open(\"https://github.com/tanflare\", '_blank');\r\n        win.focus();\r\n    }\r\n\r\nexport default Work;","import React, { Component } from 'react';\r\nimport './Contact.css';\r\n\r\nclass Contact extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"App\">\r\n                <header className=\"container\">\r\n                    {/* <h1 className=\"text\">Under Construction</h1> */}\r\n                    <div class=\"grid-container\">\r\n                        <div class=\"grid-item\"><img src=\"LN.png\" height=\"70px\" onClick={linkedin}></img></div>\r\n                        <div class=\"grid-item\">2</div>\r\n                        <div class=\"grid-item\">3</div>  \r\n                    </div>\r\n                    <h1>*Under Contruction*</h1>\r\n                </header>\r\n            </div> \r\n         );\r\n    }\r\n}\r\n \r\nfunction linkedin(){\r\nvar win = window.open(\"https://www.linkedin.com/in/tanush-samson/\", '_blank');\r\n  win.focus();\r\n}\r\n\r\nexport default Contact;\r\n\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport New from './counter2';\r\nimport About from './About';\r\nimport App from '../App';\r\nimport Work from './Work';\r\nimport Contact from './Contact';\r\n\r\nimport './Nav.css';\r\nclass Nav extends Component {\r\n    state = {  }\r\n\r\n   \r\n\r\n    render() { \r\n        return ( \r\n            <nav>\r\n                <div className=\"navWide\">\r\n                    <div className=\"wideDiv\">\r\n                        <a href=\"#\"onClick={home}>HOME</a>\r\n                        <a href=\"#\" id=\"About\" onClick={about}>ABOUT</a>\r\n                        <a href=\"#\" onClick={work}>WORK</a>\r\n                        <a href=\"#\" onClick={contact}>CONTACT</a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n         );\r\n    }\r\n}\r\n \r\n\r\nfunction about()\r\n{\r\n  //onclick={this.Test()}\r\nReactDOM.render(<About />, document.getElementById('root'));\r\nconsole.log(\"About\");\r\n  \r\n}\r\n\r\nfunction home()\r\n{\r\n  //onclick={this.Test()}\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nconsole.log(\"Home\");\r\n  \r\n}\r\n\r\nfunction contact()\r\n{\r\n  //onclick={this.Test()}\r\nReactDOM.render(<Contact />, document.getElementById('root'));\r\nconsole.log(\"Contact\");\r\n  \r\n}\r\nfunction work()\r\n{\r\n  //onclick={this.Test()}\r\nReactDOM.render(<Work />, document.getElementById('root'));\r\nconsole.log(\"Contact\");\r\n  \r\n}\r\n  \r\n    \r\n\r\nexport default Nav;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport New from './components/counter2';\nimport Nav from './components/Nav';\nimport bootstrap from 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Nav />, document.getElementById('navbar'));\n//ReactDOM.render(<New />, document.getElementById('root'));\n\n\n\n// const element = <h1>Hello World</h1>;\n// //console.log(element.toString());\n// ReactDOM.render(element, document.getElementById('root'))\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}